// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('EditTest', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('TC00000028', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title28")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    await driver.wait(until.elementLocated(By.css("ul.dropdown-menu.dropdown-menu-dark.show")), 2000)
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(1) .dropdown-item")).getText() == "대기중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(2) .dropdown-item")).getText() == "진행중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(3) .dropdown-item")).getText() == "완료")
    // //대기중 active 인지
    assert(await driver.findElement(By.css("a.dropdown-item.active")).getText() == "대기중")
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).getText() == "진행중")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000029', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title29")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    await driver.wait(until.elementLocated(By.css("ul.dropdown-menu.dropdown-menu-dark.show")), 2000)
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(1) .dropdown-item")).getText() == "대기중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(2) .dropdown-item")).getText() == "진행중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(3) .dropdown-item")).getText() == "완료")
    // //대기중 active 인지
    assert(await driver.findElement(By.css("a.dropdown-item.active")).getText() == "대기중")
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.btn-primary.dropdown-toggle")).getText() == "완료")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000030', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title30")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    // //여기까지 전제조건
    await driver.findElement(By.linkText("진행중")).click()
    // //"진행중"상태의 status 버튼 클릭
    await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).click()
    await driver.wait(until.elementLocated(By.css("ul.dropdown-menu.dropdown-menu-dark.show")), 2000)
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(1) .dropdown-item")).getText() == "대기중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(2) .dropdown-item")).getText() == "진행중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(3) .dropdown-item")).getText() == "완료")
    // //진행중active 인지
    assert(await driver.findElement(By.css("a.dropdown-item.active")).getText() == "진행중")
    await driver.findElement(By.linkText("대기중")).click()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000031', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title31")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    // //여기까지 전제조건
    await driver.findElement(By.linkText("진행중")).click()
    // //"진행중"상태의 status 버튼 클릭
    await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).click()
    await driver.wait(until.elementLocated(By.css("ul.dropdown-menu.dropdown-menu-dark.show")), 2000)
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(1) .dropdown-item")).getText() == "대기중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(2) .dropdown-item")).getText() == "진행중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(3) .dropdown-item")).getText() == "완료")
    // //진행중 active 인지
    assert(await driver.findElement(By.css("a.dropdown-item.active")).getText() == "진행중")
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.btn-primary.dropdown-toggle")).getText() == "완료")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000032', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title32")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    // //여기까지 전제조건
    await driver.findElement(By.linkText("완료")).click()
    // //"완료"상태의 status 버튼 클릭
    await driver.findElement(By.css("button.btn.btn-primary.dropdown-toggle")).click()
    await driver.wait(until.elementLocated(By.css("ul.dropdown-menu.dropdown-menu-dark.show")), 2000)
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(1) .dropdown-item")).getText() == "대기중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(2) .dropdown-item")).getText() == "진행중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(3) .dropdown-item")).getText() == "완료")
    // //완료 active 인지
    assert(await driver.findElement(By.css("a.dropdown-item.active")).getText() == "완료")
    await driver.findElement(By.linkText("대기중")).click()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000033', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title33")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    // //여기까지 전제조건
    await driver.findElement(By.linkText("완료")).click()
    // //"완료"상태의 status 버튼 클릭
    await driver.findElement(By.css("button.btn.btn-primary.dropdown-toggle")).click()
    await driver.wait(until.elementLocated(By.css("ul.dropdown-menu.dropdown-menu-dark.show")), 2000)
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(1) .dropdown-item")).getText() == "대기중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(2) .dropdown-item")).getText() == "진행중")
    assert(await driver.findElement(By.css("ul.dropdown-menu.dropdown-menu-dark.show li:nth-child(3) .dropdown-item")).getText() == "완료")
    // //완료 active 인지
    assert(await driver.findElement(By.css("a.dropdown-item.active")).getText() == "완료")
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).getText() == "진행중")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000034', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title34")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content34")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "test title34")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title34")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content34")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title34")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title34")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title34")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content34")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000035', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title35")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content35")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title35")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "test title35")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title35")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content35")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000036', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title36")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content36")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title36")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content36")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "test title36")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title36")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content36")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000037', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title37")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content37")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title37")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title37")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title37")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title37")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content37")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000038', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title38")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content38")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title38")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title38")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content38")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title38")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title38")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content38")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000039', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title39")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content39")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title39")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content39")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "test title39")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title39")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content39")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000040', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title40")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content40")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title40")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title40")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content40")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title40")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title40")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content40")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000041', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title41")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content41")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).getText() == "진행중")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title41")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content41")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title41")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).getText() == "진행중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title41")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title41")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content41")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000042', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title42")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content42")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.btn-light.dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).getText() == "진행중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title42")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.btn-warning.dropdown-toggle")).getText() == "진행중")
    assert(await driver.findElement(By.css("span")).getText() == "test title42")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title42")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content42")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000043', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title43")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content43")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title43")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content43")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    assert(await driver.findElement(By.css("span")).getText() == "test title43")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title43")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content43")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000044', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title44")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content44")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title44")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title44")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title44")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title44")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content44")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000045', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title45")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content45")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title45")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title45")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content45")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title45")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title45")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content45")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000046', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title46")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content46")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title46")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content46")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    assert(await driver.findElement(By.css("span")).getText() == "test title46")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title46")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content46")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000047', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title47")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content47")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title47")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title47")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content47")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "진행중")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title47")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".btn-primary:nth-child(1)")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title47")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content47")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000048', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title48")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content48")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title48")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title48")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content48")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title48")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title48")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title48")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content48")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000049', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title49")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content49")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title49")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    assert(await driver.findElement(By.css("span")).getText() == "test title49")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title49")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content49")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000050', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title50")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content50")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title50")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content50")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    assert(await driver.findElement(By.css("span")).getText() == "test title50")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title50")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content50")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000051', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title51")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content51")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title51")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title51")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title51")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title51")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "test content51")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000052', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title52")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content52")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title52")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title52")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content52")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title52")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title52")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content52")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-06")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000053', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title53")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content53")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title53")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content53")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    assert(await driver.findElement(By.css("span")).getText() == "test title53")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "test title53")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content53")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000054', async function() {
    await driver.get("http://todo.wooyu.world/")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title54")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-06")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content54")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 3000)
    await driver.findElement(By.css("button.btn.dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    // //여기까지 전제조건
    assert(await driver.findElement(By.css("span")).getText() == "test title54")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("Edit title54")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-07")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("Edit content54")
    await driver.findElement(By.id("modalSaveBtn")).click()
    assert(await driver.switchTo().alert().getText() == "저장하시겠습니까?")
    await driver.switchTo().alert().accept()
    assert(await driver.findElement(By.css("button.btn.dropdown-toggle")).getText() == "완료")
    assert(await driver.findElement(By.css("span")).getText() == "Edit title54")
    // //수정 버튼 클릭
    await driver.findElement(By.css(".card:nth-child(1) .btn-right > .btn-primary")).click()
    // //모달 표시되는지
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    {
      const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
      assert(value == "Edit title54")
    }
    {
      const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
      assert(value == "Edit content54")
    }
    {
      const value = await driver.findElement(By.id("addDate")).getAttribute("value")
      assert(value == "2024-03-07")
    }
    await driver.findElement(By.css(".btn-close")).click()
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
})
