// Generated by Selenium IDE
const assert = require('assert')
const {Builder,until,By} = require("selenium-webdriver");
const chromeDriver = require("selenium-webdriver/chrome");

describe('InitTest', function () {
  this.timeout(30000)
  let driver
  let vars
  const chromeOptions = new chromeDriver.Options();
  chromeOptions.addArguments("--headless");
  chromeOptions.addArguments("--disable-gpu");
  chromeOptions.addArguments("--no-sandbox");
  // beforeEach(async function() {
  before(async function() {
    driver = await new Builder().forBrowser('chrome')
        .setChromeOptions(chromeOptions)
        .build()
    vars = {}
    await driver.get("http://todo.wooyu.world/")
  })
  // afterEach(async function() {
  after(async function() {
    await driver.quit();
  })
  it('TC00000000', async function() {
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
  })
  it('TC00000001', async function() {
    await driver.findElement(By.id("searchTitle")).click()
    await driver.findElement(By.id("searchDate")).click()
    await driver.findElement(By.css(".searchIcon")).click()
  })
  it('TC00000002', async function() {
    // 
    await driver.findElement(By.id("searchTitle")).click()
    {
      const attribute = await driver.findElement(By.id("searchTitle")).getAttribute("placeholder")
      vars["searchTitlePlaceholder"] = attribute
    }
    // // searchTitlePlaceholder 값 확인하기
    console.log("searchTitlePlaceholder 값 확인하기")
    console.log(`searchTitlePlaceholder: ${vars["searchTitlePlaceholder"]}`)
    assert(vars["searchTitlePlaceholder"].toString() == "내용을 입력하세요.")
  })
  it('TC00000003', async function() {
    
    {
      const value = await driver.findElement(By.id("searchDate")).getAttribute("value")
      assert(value == "")
    }
  })
  it('TC00000004', async function() {
    
    await driver.findElement(By.css(".bi-search-heart-fill")).click()
  })
  it('TC00000005', async function() {
    
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    await driver.sleep(3000);
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(3000);
  })
  it('TC00000006', async function() {
    
      const elements = await driver.findElements(By.css(".card-body"))
      assert(!elements.length)
  })
  it('TC00000007', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title7")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.sleep(5000);
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    await driver.findElement(By.css(".dropdown")).click()
    await driver.findElement(By.css(".form-check")).click()
    {
      const elements = await driver.findElements(By.css(".card-body"))
      assert(elements.length)
    }
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.css(".bi-trash-fill")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000008', async function() {

    // await driver.sleep(5000);
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title8")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    //
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    // await driver.sleep(5000);
    assert(await driver.findElement(By.css(".dropdown-toggle")).getText() == "대기중")
    await driver.sleep(5000);
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })





  it('TC00000009', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title9")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(3000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    await driver.findElement(By.css(".dropdown-toggle")).click()
    await driver.findElement(By.linkText("진행중")).click()
    await driver.sleep(3000);
    assert(await driver.findElement(By.css(".dropdown-toggle")).getText() == "진행중")
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000010', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title10")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    // // statusbtn 클릭
    console.log("statusbtn 클릭")
    await driver.findElement(By.css(".dropdown-toggle")).click()
    await driver.findElement(By.linkText("완료")).click()
    await driver.sleep(3000);
    assert(await driver.findElement(By.css(".dropdown-toggle")).getText() == "완료")
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.name("deleteBtn")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000011', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    await driver.findElement(By.css(".dropdown")).click()
    await driver.findElement(By.css(".form-check")).click()
    {
      const elements = await driver.findElements(By.css(".card-body"))
      assert(elements.length)
    }
    assert(await driver.findElement(By.xpath("//*[@id=\"scrollDiv\"]/div[1]/div/div/div[1]/span")).getText() == "test title")
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000012', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    {
      const elements = await driver.findElements(By.css(".card-body"))
      assert(elements.length)
    }
    // // 수정 버튼 클릭
    console.log("수정 버튼 클릭")
    await driver.findElement(By.css(".card:nth-child(1) .btn-primary")).click()
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000013', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    {
      const elements = await driver.findElements(By.css(".card-body"))
      assert(elements.length)
    }
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000014', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title1")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title2")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title3")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title4")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title5")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title6")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title7")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    {
      const elements = await driver.findElements(By.css(".card-body"))
      assert(elements.length)
    }
    // // scroll 유무 확인하는 command를 IDE 미지원하여 mocha.js로 작성
    console.log("scroll 유무 확인하는 command를 IDE 미지원하여 mocha.js로 작성")
    // // 삭제하기
    console.log("삭제하기")
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
  })
  it('TC00000015', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title1")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title2")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title3")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title4")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title5")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title6")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title7")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    // // todo 생성
    console.log("todo 생성")
    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title8")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(5000);
    await driver.wait(until.elementTextIs(await driver.findElement(By.css(".title")), 'To do list'), 30000)
    {
      const elements = await driver.findElements(By.css(".card-body"))
      assert(elements.length)
    }
    // // scroll 유무 확인하는 command를 IDE 미지원하여 mocha.js로 작성
    console.log("scroll 유무 확인하는 command를 IDE 미지원하여 mocha.js로 작성")
    // // 삭제
    console.log("삭제")
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger > .bi")).click()
  })
})
