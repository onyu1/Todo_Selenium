// Generated by Selenium IDE
// const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const {Builder,until,By} = require("selenium-webdriver");
const chromeDriver = require("selenium-webdriver/chrome");

//npx mocha --parallel createTest.js
describe('CreateTest', function() {
  this.timeout(50000)
  let driver
  let vars
  const chromeOptions = new chromeDriver.Options();
  //chrome 브라우저 옵션
  // chromeOptions.addArguments("--headless");
  // chromeOptions.addArguments("--disable-gpu");
  // chromeOptions.addArguments("--no-sandbox");
  // beforeEach(async function() {
  before(async function() {
    driver = await new Builder().forBrowser('chrome')
        .setChromeOptions(chromeOptions)
        .build()
    vars = {}
    await driver.get("http://todo.wooyu.world/")
    // await driver.get("http://localhost:8181/")
  })
  // afterEach(async function() {
  after(async function() {
    await driver.quit();
  })

  // beforeEach(async function() {
  //   driver = await new Builder().forBrowser('chrome').build()
  //   vars = {}
  // })
  // afterEach(async function() {
  //   await driver.quit();
  // })
  it('TC00000016', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    // //제목
    await driver.sleep(1000);
    const TitleAttribute = await driver.findElement(By.id("exampleModalLabel")).getAttribute("placeholder")
    vars["titlePlaceholder"] = TitleAttribute

    // //titlePlaceholder 값 확인
    console.log(`titlePlaceholder: ${vars["titlePlaceholder"]}`)

    assert(vars["titlePlaceholder"].toString() == "제목을 입력하세요.")
    // //내용
    const ContentAttribute = await driver.findElement(By.id("ModalContent")).getAttribute("placeholder")
    vars["contentPlaceholder"] = ContentAttribute

    // //contentPlaceholder 값 확인
    console.log("//contentPlaceholder 값 확인")
    console.log(`contentPlaceholder: ${vars["contentPlaceholder"]}`)
    assert(vars["contentPlaceholder"].toString() == "내용을 입력하세요.")
    // //날짜 공백인지
    const value = await driver.findElement(By.id("addDate")).getAttribute("value")
    assert(value == "")
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000017', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title17")
    await driver.sleep(1000);
    const value = await driver.findElement(By.id("exampleModalLabel")).getAttribute("value")
    assert(value == "test title17")
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000018', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content")
    await driver.sleep(1000);
    const value = await driver.findElement(By.id("ModalContent")).getAttribute("value")
    assert(value == "test content")
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000019', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.sleep(2000);
    const value = await driver.findElement(By.id("addDate")).getAttribute("value")
    assert(value == "2024-03-04")
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000020', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.sleep(1000);
    assert(await driver.switchTo().alert().getText() == "제목과 날짜를 입력하세요.")
    await driver.switchTo().alert().accept()//alert 확인버튼
    await driver.sleep(1000);
    //모달 닫기
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000021', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title21")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.sleep(1000);
    assert(await driver.switchTo().alert().getText() == "날짜를 선택하세요.")
    await driver.switchTo().alert().accept()//alert 확인버튼
    await driver.sleep(1000);
    //모달 닫기
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000022', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.sleep(1000);
    assert(await driver.switchTo().alert().getText() == "제목을 입력하세요.")
    await driver.switchTo().alert().accept()//alert 확인버튼
    await driver.sleep(1000);
    //모달 닫기
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000023', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.sleep(1000);
    assert(await driver.switchTo().alert().getText() == "제목과 날짜를 입력하세요.")
    await driver.switchTo().alert().accept()//alert 확인버튼
    await driver.sleep(1000);
    //모달 닫기
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000024', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title24")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.sleep(1000);
    assert(await driver.switchTo().alert().getText() == "날짜를 선택하세요.")
    await driver.switchTo().alert().accept()//alert 확인버튼
    await driver.sleep(1000);
    //모달 닫기
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000025', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.sleep(1000);
    assert(await driver.switchTo().alert().getText() == "제목을 입력하세요.")
    await driver.switchTo().alert().accept()//alert 확인버튼
    await driver.sleep(1000);
    //모달 닫기
    await driver.findElement(By.css(".btn-close")).click()
    await driver.sleep(1000);
  })
  it('TC00000026', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title26")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(1000);
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 30000)
    assert(await driver.findElement(By.css(".dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span:nth-child(3)")).getText() == "test title26")

    // //삭제하기
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
  it('TC00000027', async function() {

    await driver.findElement(By.css(".bi-pencil-fill")).click()
    // 모달 나타날때까지 기다림
    await driver.wait(until.elementIsVisible(await driver.findElement(By.id("exampleModalLabel"))), 3000)
    await driver.findElement(By.id("exampleModalLabel")).click()
    await driver.findElement(By.id("exampleModalLabel")).sendKeys("test title27")
    await driver.findElement(By.id("addDate")).click()
    await driver.findElement(By.id("addDate")).sendKeys("002024-03-04")
    await driver.findElement(By.id("ModalContent")).click()
    await driver.findElement(By.id("ModalContent")).sendKeys("test content")
    // //제목, 내용, 날짜 입력 후 저장버튼 클릭

    await driver.findElement(By.id("modalSaveBtn")).click()
    await driver.navigate().refresh();
    await driver.sleep(2000);

    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".card-body"))), 30000)

    // //진행 상태, 제목 확인

    assert(await driver.findElement(By.css(".dropdown-toggle")).getText() == "대기중")
    assert(await driver.findElement(By.css("span:nth-child(3)")).getText() == "test title27")
    // //삭제하기
    await driver.findElement(By.css(".card:nth-child(1) .btn-danger")).click()
    assert(await driver.switchTo().alert().getText() == "삭제하시겠습니까?")
    await driver.switchTo().alert().accept()
  })
})
